#!/usr/bin/env ruby

require 'thor'

class MirrorSvnGit < Thor
  default_task :mirror

  desc 'mirror LOCAL_DIR GIT_REMOTE', 'mirror branches from svn repo to a git repo'
  def mirror(local_dir, git_remote)
    Dir.chdir(local_dir) do
      `git svn fetch`

      delete_old_svn_branches(git_remote)
      push_svn_branches(git_remote)

      `git checkout master`
      `git merge remotes/trunk`
      `git push #{git_remote} master`
    end
  end

  no_commands do
    def delete_old_svn_branches(git_remote)

    end

    def push_svn_branches(git_remote)
      svn_branches.each do |branch|
        `git push #{git_remote} #{branch}`
      end
    end

    def is_svn_branch?(branch_name)
      branch_name =~ /remotes\/[a-zA-Z\_\-]+$/
    end

    def old_svn_branches
      svn_branches.select do |branch_name|
        svn_url = `git show-branch #{branch_name}`.match(/\s(https://\S)@/)
        binding.pry
      end
    end

    def svn_branches(git_remote)
      `git branch -a`.split("\n").select do |branch_name|
        is_svn_branch? branch_name
      end
    end
  end
end

MirrorSvnGit.start(ARGV)
